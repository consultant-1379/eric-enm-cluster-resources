modelVersion: 2.0

description: "ENM: CMService Service Group Pipeline"

docker:
  registry: https://armdocker.rnd.ericsson.se/proj-enm

docker-images:
  - adp-helm-dr-check: armdocker.rnd.ericsson.se/sandbox/adp-staging/adp-cicd/common-library-adp-helm-dr-check:latest
  - eric-enm-version-auto: armdocker.rnd.ericsson.se/proj-enm/eric-enm-version-auto:latest
  - adp-release-auto: armdocker.rnd.ericsson.se/sandbox/adp-staging/adp-cicd/bob-adp-release-auto:4.7.2
  - cenm-utilities-docker-image: armdocker.rnd.ericsson.se/proj_oss_releases/enm/cenm-build-utilities:csar_1797
  - adp-release-ihcauto: armdocker.rnd.ericsson.se/proj-adp-cicd-drop/adp-int-helm-chart-auto:latest

properties:
  - image-name: eric-enm-cluster-resources
  - image-repo: https://armdocker.rnd.ericsson.se/proj-enm
  - docker-image-path: armdocker.rnd.ericsson.se/proj-enm/${image-name}
  - docker-internal-image-path: armdocker.rnd.ericsson.se/proj_oss_releases/enm/${image-name}
  - sidecar-docker-image-path: armdocker.rnd.ericsson.se/proj-enm/${sidecar-image-name}
  - helm-chart-path: chart/eric-enm-cluster-scoped-resources
  - helm-chart-name: eric-enm-cluster-scoped-resources
  - helm-chart-repo: https://arm.epk.ericsson.se/artifactory/proj-enm-dev-internal-helm/eric-enm-cluster-scoped-resources/
  - chart-repo-release: https://arm.epk.ericsson.se/artifactory/proj-enm-helm/eric-enm-cluster-scoped-resources/
  - cluster-resources-metadata-file-name: cluster-resources-int-metadata-artifact.json
env:
  - RELEASE (default=true)
  - HELM_REPO_TOKEN
  - ISO_VERSION (default=1.0.5555)
  - PRODUCTION_DATE (default = $(date +%d%m%Y-%H%M%S --utc))
  - AUTHOR_NAME
  - AUTHOR_EMAIL
  - GIT_COMMITTER_NAME
  - INTEGRATION_CHART_VERSION
  - GIT_COMMITTER_EMAIL
  - SPRINT_TAG
  - PRODUCT_SET
  - CLUSTER_RESOURCES_CHART_FILE_SIZE


var:
  - commit-hash
  - version
  - version-prefix
  - rstate

rules:
  swap-latest-versions-with-numbers:
    - task: swap_versions
      docker-image: eric-enm-version-auto
      docker-flags:
        - "--env-file enm_artifact.properties"
      cmd: python /substitute_values.py

  generate-new-version:
    - task: generate-version
      docker-image: adp-release-auto
      cmd: generate-version -f VERSION_PREFIX --is-release ${env.RELEASE} --output version
    - task: set-version-prefix
      cmd: cat VERSION_PREFIX > .bob/var.version-prefix
    - task: generate-rstate
      docker-image: adp-release-auto
      cmd: get_rstate.py ${var.version} > .bob/var.rstate
    - task: get-commit-hash
      docker-image: adp-release-auto
      cmd: git rev-parse --short HEAD > .bob/var.commit-hash

  build-image:
    - task: build-docker-image
      cmd:
        - docker build . --build-arg GIT_COMMIT=${var.commit-hash} --build-arg BUILD_DATE=${env.BUILD_DATE} --build-arg IMAGE_BUILD_VERSION=${var.version} --build-arg RSTATE=${var.rstate} --build-arg ISO_VERSION=${env.ISO_VERSION} --tag ${docker-image-path}:${var.version}

  build-image-with-all-tags:
    - task: build-docker-image-with-tags
      cmd:
        - docker build . --build-arg GIT_COMMIT=${var.commit-hash} --build-arg BUILD_DATE=${env.BUILD_DATE} --build-arg IMAGE_BUILD_VERSION=${var.version} --build-arg RSTATE=${var.rstate} --build-arg ISO_VERSION=${env.ISO_VERSION} --tag ${docker-image-path}:${var.version}
        - docker image tag ${docker-image-path}:${var.version} ${docker-image-path}:${var.version-prefix}-latest
        - docker image tag ${docker-image-path}:${var.version} ${docker-image-path}:latest

  push-image-with-all-tags:
    - task: push-docker-image
      cmd:
        - docker push ${docker-image-path}:${var.version}
        - docker push ${docker-image-path}:${var.version-prefix}-latest
        - docker push ${docker-image-path}:latest
        - docker push ${sidecar-docker-image-path}:${var.version}
        - docker push ${sidecar-docker-image-path}:${var.version-prefix}-latest
        - docker push ${sidecar-docker-image-path}:latest

  helm-publish:
    - task: helm-publish
      docker-image: adp-release-ihcauto
      cmd: arm-upload -f ${helm-chart-name}-${env.INTEGRATION_CHART_VERSION}.tgz -u ${chart-repo-release} -t ${env.HELM_REPO_TOKEN}

  helm-push:
    - task: helm-push
      docker-image: adp-release-ihcauto
      cmd: arm-upload -f .bob/${helm-chart-name}-${var.version}.tgz -u ${chart-repo-release} -t ${env.HELM_REPO_TOKEN}

  remove-image:
    - task: remove-docker-image
      cmd:
        - docker image remove ${docker-image-path}:${var.version}
        - docker image remove ${sidecar-docker-image-path}:${var.version}

  generate-adp-parameters:
    - task: generate-adp-parameters
      docker-image: adp-release-ihcauto
      cmd: ihc-generate-artifacts --int-chart-name ${helm-chart-name} --int-chart-version ${env.INTEGRATION_CHART_VERSION}  --int-chart-repo ${chart-repo-release}

  remove-image-with-all-tags:
    - task: remove-docker-image-with-tags
      cmd:
        - docker image remove ${docker-image-path}:${var.version}
        - docker image remove ${docker-image-path}:${var.version-prefix}-latest
        - docker image remove ${docker-image-path}:latest
        - docker image remove ${sidecar-docker-image-path}:${var.version}
        - docker image remove ${sidecar-docker-image-path}:${var.version-prefix}-latest
        - docker image remove ${sidecar-docker-image-path}:latest

  build-image-internal:
    - task: build-docker-image
      cmd:
        - docker build . --build-arg GIT_COMMIT=${var.commit-hash} --build-arg BUILD_DATE=${env.BUILD_DATE} --build-arg IMAGE_BUILD_VERSION=${var.version} --build-arg RSTATE=${var.rstate} --build-arg ISO_VERSION=${env.ISO_VERSION} --tag ${docker-internal-image-path}:${var.version}

  build-image-with-all-tags-internal:
    - task: build-docker-image-with-tags
      cmd:
        - docker build . --build-arg GIT_COMMIT=${var.commit-hash} --build-arg BUILD_DATE=${env.BUILD_DATE} --build-arg IMAGE_BUILD_VERSION=${var.version} --build-arg RSTATE=${var.rstate} --build-arg ISO_VERSION=${env.ISO_VERSION} --tag ${docker-internal-image-path}:${var.version}
        - docker image tag ${docker-internal-image-path}:${var.version} ${docker-internal-image-path}:${var.version-prefix}-latest
        - docker image tag ${docker-internal-image-path}:${var.version} ${docker-internal-image-path}:latest

  push-image-with-all-tags-internal:
    - task: push-docker-image
      cmd:
        - docker push ${docker-internal-image-path}:${var.version}
        - docker push ${docker-internal-image-path}:${var.version-prefix}-latest
        - docker push ${docker-internal-image-path}:latest

  remove-image-internal:
    - task: remove-docker-image
      cmd:
        - docker image remove ${docker-internal-image-path}:${var.version}

  remove-image-with-all-tags-internal:
    - task: remove-docker-image-with-tags
      cmd:
        - docker image remove ${docker-internal-image-path}:${var.version}
        - docker image remove ${docker-internal-image-path}:${var.version-prefix}-latest
        - docker image remove ${docker-internal-image-path}:latest

  lint-helm:
    - task: helm-lint
      docker-image: adp-release-auto
      cmd: helm lint ${helm-chart-path}

  test-helm:
    - task: helm-chart-check
      docker-image: adp-helm-dr-check
      cmd: java -jar /helm-dr-check.jar --helm-chart chart/${helm-chart-name}

  lint-dockerfile:
    - task: dockerfile-lint
      cmd:
        - docker run --rm -i hadolint/hadolint < Dockerfile | tee ./dockerfilelint.log

  build-helm:
    - task: helm-package
      docker-image: adp-release-auto
      cmd: helm-package --folder ${helm-chart-path} --version ${var.version} --replace VERSION=${var.version} --replace RSTATE=${var.rstate} --replace SPRINT_TAG=${env.SPRINT_TAG} --replace PRODUCTION_DATE=${env.PRODUCTION_DATE}

  build-helm-pointfix:
    - task: helm-package
      docker-image: adp-release-auto
      cmd: helm-package --folder ${helm-chart-path} --version ${var.version} --replace VERSION=${var.version} --replace RSTATE=${var.rstate} --replace SPRINT_TAG=${env.SPRINT_TAG} --replace PRODUCTION_DATE=${env.PRODUCTION_DATE}

  helm-push:
    - task: helm-push
      docker-image: adp-release-ihcauto
      cmd: arm-upload -f .bob/${helm-chart-name}-${var.version}.tgz -u ${helm-chart-repo} -t ${env.HELM_REPO_TOKEN}


  generate-output-parameters:
    - task: generate-version
      docker-image: adp-release-ihcauto
      cmd: ihc-generate-artifacts --int-chart-name ${helm-chart-name} --int-chart-version ${var.version}  --int-chart-repo ${helm-chart-repo}

  generata-metadata-parameters:
    - task: generate-metadata-version
      docker-image: eric-enm-version-auto
      docker-flags:
        - "--env ISO_VERSION='${env.ISO_VERSION}'"
      cmd: python /generate-metadata-artifacts.py

  generate-cluster-resources-int-metadata-parameters:
    - task: cluster-resources-generate-int-metadata-parameters
      docker-image: cenm-utilities-docker-image
      cmd:
       - tar -xvf eric-enm-cluster-scoped-resources-${var.version}.tgz
       - int-generate-metadata-artifacts --product-set ${env.PRODUCT_SET} --int-chart-name ${helm-chart-name} --int-chart-version ${var.version}  --int-chart-repo ${helm-chart-repo} --int-chart-path ${helm-chart-path}  --iso-version ${env.ISO_VERSION} --metadata-file-name ${cluster-resources-metadata-file-name} --int-file-size ${env.CLUSTER_RESOURCES_CHART_FILE_SIZE}  --int-commit-hash ${var.commit-hash}

  generate-output-parameters-internal-stage:
    - task: generate-version-internal
      docker-image: adp-release-auto
      cmd: generate-adp-artifacts --chart-name ${helm-chart-name} --chart-repo ${helm-chart-repo} --chart-version ${var.version} --image-repo ${docker-internal-image-path} --image-name ${image-name} --image-version ${var.version}

  create-git-tag:
    - task: create-git-tag
      docker-image: adp-release-auto
      docker-flags:
        - "--env GIT_COMMITTER_NAME='${env.GIT_COMMITTER_NAME}'"
        - "--env GIT_COMMITTER_EMAIL='${env.GIT_COMMITTER_EMAIL}'"
      cmd: git tag --annotate ${var.version} --message "Build Version ${var.version} by ${env.AUTHOR_NAME} <${env.AUTHOR_EMAIL}>"

  remove-git-tag:
    - task: remove-git-tag
      docker-image: adp-release-auto
      cmd: git tag --delete ${var.version}

  clean:
    - task: rm
      cmd:
       - rm -rf .bob/
       - rm -rf artifact.properties
       - rm -rf int-metadata-artifact.json
